spring:
  config:
    activate:
      on-profile: render

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      ssl:
        enabled: true
      timeout: 6000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 5
          min-idle: 2

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP:source.gateway.apim.event-mock-kafka.gravitee.xyz:9092}  # ThÃªm fallback
    client-id: ${SPRING_APPLICATION_NAME:kkun-quiz}

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

    consumer:
      group-id: ${KAFKA_GROUP_ID:kkun-quiz-writer}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.kkunquizapp.QuizAppBackend.*"

    properties:
      security.protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
      sasl.mechanism: ${KAFKA_SASL_MECHANISM:}
      sasl.jaas.config: ${KAFKA_SASL_JAAS:}
      ssl.endpoint.identification.algorithm: https