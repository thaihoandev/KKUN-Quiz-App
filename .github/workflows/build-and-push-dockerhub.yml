name: Build & Push Images (Docker Hub)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'QuizAppBackend/**'
      - 'my-frontend/**'
      - 'mcq_extraction/**'
      - '.github/workflows/build-and-push-dockerhub.yml'
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
    paths:
      - 'QuizAppBackend/**'
      - 'my-frontend/**'
      - 'mcq_extraction/**'

permissions:
  contents: read

env:
  IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/kkun-quiz-app

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Clear Docker Config
        run: rm -f ~/.docker/config.json
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Debug Login
        run: |
          echo "IMAGE_PREFIX is $IMAGE_PREFIX"
          docker pull alpine

  backend:
    needs: login
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Debug IMAGE_PREFIX
        run: echo "IMAGE_PREFIX is $IMAGE_PREFIX"
      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./QuizAppBackend
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_PREFIX }}-backend:latest
            ${{ env.IMAGE_PREFIX }}-backend:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          registry: docker.io

  frontend:
    needs: login
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Debug IMAGE_PREFIX
        run: echo "IMAGE_PREFIX is $IMAGE_PREFIX"
      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./my-frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_PREFIX }}-frontend:latest
            ${{ env.IMAGE_PREFIX }}-frontend:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          registry: docker.io

  retag-on-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Retag latest -> version
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          for svc in backend frontend; do
            src="${{ env.IMAGE_PREFIX }}-$svc:latest"
            dst="${{ env.IMAGE_PREFIX }}-$svc:${VERSION}"
            docker pull "$src"
            docker tag "$src" "$dst"
            docker push "$dst"
          done